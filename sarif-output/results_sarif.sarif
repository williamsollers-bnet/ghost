{"$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json", "version": "2.1.0", "runs": [{"tool": {"driver": {"name": "Checkov", "version": "3.2.353", "informationUri": "https://checkov.io", "rules": [{"id": "CKV_DOCKER_2", "name": "Ensure that HEALTHCHECK instructions have been added to container images", "shortDescription": {"text": "Ensure that HEALTHCHECK instructions have been added to container images"}, "fullDescription": {"text": "Ensure that HEALTHCHECK instructions have been added to container images"}, "help": {"text": "Ensure that HEALTHCHECK instructions have been added to container images\nResource: /docker\\Dockerfile."}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-that-healthcheck-instructions-have-been-added-to-container-images"}, {"id": "CKV_DOCKER_3", "name": "Ensure that a user for the container has been created", "shortDescription": {"text": "Ensure that a user for the container has been created"}, "fullDescription": {"text": "Ensure that a user for the container has been created"}, "help": {"text": "Ensure that a user for the container has been created\nResource: /docker\\Dockerfile."}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-that-a-user-for-the-container-has-been-created"}], "organization": "bridgecrew"}}, "results": [{"ruleId": "CKV_DOCKER_2", "ruleIndex": 0, "level": "error", "attachments": [], "message": {"text": "Ensure that HEALTHCHECK instructions have been added to container images"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "docker/Dockerfile"}, "region": {"startLine": 1, "endLine": 28, "snippet": {"text": "FROM ubuntu:xenial\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n build-essential \\\n clang \\\n libasound2-dev \\\n libboost-dev \\\n libdbus-1-dev \\\n libgl-dev \\\n libglu-dev \\\n libjack-dev \\\n libpulse-dev \\\n libsamplerate0-dev \\\n libudev-dev \\\n libx11-dev \\\n libxcursor-dev \\\n libxext-dev \\\n libxi-dev \\\n libxinerama-dev \\\n libxkbcommon-dev \\\n libxrandr-dev \\\n libxss-dev \\\n libxt-dev \\\n libxv-dev \\\n libxxf86vm-dev \\\n valgrind \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nENTRYPOINT while :; do read x; done"}}}}]}, {"ruleId": "CKV_DOCKER_3", "ruleIndex": 1, "level": "error", "attachments": [], "message": {"text": "Ensure that a user for the container has been created"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "docker/Dockerfile"}, "region": {"startLine": 1, "endLine": 28, "snippet": {"text": "FROM ubuntu:xenial\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n build-essential \\\n clang \\\n libasound2-dev \\\n libboost-dev \\\n libdbus-1-dev \\\n libgl-dev \\\n libglu-dev \\\n libjack-dev \\\n libpulse-dev \\\n libsamplerate0-dev \\\n libudev-dev \\\n libx11-dev \\\n libxcursor-dev \\\n libxext-dev \\\n libxi-dev \\\n libxinerama-dev \\\n libxkbcommon-dev \\\n libxrandr-dev \\\n libxss-dev \\\n libxt-dev \\\n libxv-dev \\\n libxxf86vm-dev \\\n valgrind \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nENTRYPOINT while :; do read x; done"}}}}]}]}]}